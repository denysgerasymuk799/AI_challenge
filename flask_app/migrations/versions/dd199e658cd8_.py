"""empty message

Revision ID: dd199e658cd8
Revises: 
Create Date: 2020-05-08 19:37:14.967439

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'dd199e658cd8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('course',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_title', sa.String(length=80), nullable=False),
    sa.Column('price', sa.String(length=80), nullable=True),
    sa.Column('image', sa.String(length=100), nullable=True),
    sa.Column('course_duration', sa.String(length=80), nullable=True),
    sa.Column('number_of_students', sa.String(length=80), nullable=True),
    sa.Column('short_description', sa.String(length=200), nullable=True),
    sa.Column('long_description', sa.String(length=1200), nullable=True),
    sa.Column('url', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('course_title'),
    sa.UniqueConstraint('url')
    )
    op.create_table('profession',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('skill',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('profession_to_skill',
    sa.Column('profession_id', sa.Integer(), nullable=True),
    sa.Column('skill_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['profession_id'], ['profession.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], )
    )
    op.create_table('skill_to_courses',
    sa.Column('skill_id', sa.Integer(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], )
    )
    op.drop_table('coursera')
    op.drop_table('skills_for_all_professions')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('skills_for_all_professions',
    sa.Column('job_title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('skills_list', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=False)
    )
    op.create_table('coursera',
    sa.Column('course_title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('price', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('image', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('course_duration', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('number_of_students', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('short_description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('long_description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.drop_table('skill_to_courses')
    op.drop_table('profession_to_skill')
    op.drop_table('skill')
    op.drop_table('profession')
    op.drop_table('course')
    # ### end Alembic commands ###
